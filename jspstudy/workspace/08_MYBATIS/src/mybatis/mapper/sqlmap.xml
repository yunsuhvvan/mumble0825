<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- SQL문 작성하는 곳 == mapper -->

<!-- namespace는 mapper의 전체 경로를 작성해 둔다. -->
<mapper namespace="mybatis.mapper.sqlmap">

	<!-- 모든 쿼리문에 세미콜론(;) 넣지 말 것!!! -->

	<!--
		1. 사원 목록 반환
			1) 파라미터 : 없음
			2) 반환타입 : 사원 (1명이든 여러 명이든 사원)
	-->
	<select id="selectEmpList" resultType="dto.EmpDto">
		SELECT num, name, salary, hire
		  FROM emp
		 ORDER BY num DESC
	</select>
	
	
	
	
	
	<!-- 
			2. 사원 정보 반환
				1) 파라미터 : Long num   
				2) 반환타입 :  사원 (1명이든 여러명이든 사원)
				3) 변수 가지고 올땐 $가 아니라 #{변수명}이다. //주의사항
	 -->
	 <select id="selectEmpByNum" parameterType="Long" resultType="dto.EmpDto">
	 	SELECT num, name, salary, hire
	 	  FROM emp
	 	 WHERE num = #{num}     
	 </select>
	 
	 
	 <!-- 
	 	3. 사원 삭제
	 		1) 파라미터 : Long num
	 		2) 반환타입 : 0 또는 1 즉, int
	 		3) 주의!
	 		   <insert>,<update>,<delete> 태그는 반환타입이 모두 int이다.
	 		   Mybatis에서는 반환타입을 작성하지 않는다.
	 		   어.차.피 int이므로 적어주지 않는다.
	  -->
	  <delete id="deleteEmp" parameterType="Long">
	  		DELETE 
	  		  FROM emp
	  		 WHERE num = #{num}
	  </delete>
	 
	 
	 <!-- 
	 	4. 사원 수정
	 			1) 파라미터 :EmpDto
	 			2) 반환타입 : update는 반환타입 안적음
	  -->
	 <update id="updateEmp" parameterType="dto.EmpDto">
	 	UPDATE emp
	 	   SET name = #{name}
	 	     , salary=#{salary}
	 	 WHERE num = #{num}
	 </update>
	 
	 <!--  
	 	5. 사원 등록
	 			1) 파라미터 : HashMap
	 			2) 반환타입 : insert는 반환타입 안적음
	  -->
	  
	  <insert id="insertEmp" parameterType="Map">
	  	INSERT INTO
	  	   emp (num, name, salary, hire)
	  	 VALUES(emp_seq.nextval, #{name}, TO_NUMBER(#{salary}), TO_CHAR(SYSDATE,'YYYY-MM-DD'))
	  </insert>















</mapper>