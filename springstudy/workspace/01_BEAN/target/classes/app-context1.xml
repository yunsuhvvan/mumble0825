<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


	<!-- 
		Spring bean configuration file
		: 안녕 난 bean을 만드는 XML 이야
	 -->
		
	<!-- 
	1. 디폴트 생성자 + setter
	   setter injection 방식 
	 -->
	 
	<!-- 
		1) 디폴트 생성자
		<bean id="객체명" class="클래스명"></bean>
		<bean id="객체명" class="클래스명"/>
		
		2) setter 
		<property name="필드명">
			<value>값</value>
		</property>
		
		<property name="필드명">
			<ref bean="객체명"/>		
		</property>
	 -->
	 
	 <!-- 
	 	지금부터 아래 bean을 생성한다
	 	Calculator calculator1 = new Calculator();
	 	
	  -->
	 
	 <bean id="calculator1" class="com.koreait.ex01.bean01.Calculator"></bean>
	 
	 <!-- 
	 	지금부터 아래 Bean을 생성한다
	 	EngineerCalculator eCalculator1 = new EnginnerCalculator();
	 	eCalculator.setA(7);
	 	eCalculator.setB(2);
	 	eCalculator.setCalculator(calculator1);
	  -->
	  
	  <bean id="eCalculator1" class="com.koreait.ex01.bean01.EngineerCalculator">
			<property name="a">
				<value>7</value>
			</property>	
			<property name="b">
				<value>2</value>
			</property>
			<property name="calculator">
				<ref bean="calculator1"/>
			</property>  
	  </bean>
	  
	  <!-- 
	  	 다음 Bean을 생성해본다.
	  	 Calculator calculator2 = new Calculator();
	  	 EngineerCalculator eCalculator2 = new EngineerCalculator();
	  	 eCalculator.setA(12);
	  	 eCalculator.setB(7);
	  	 eCalculator.setCalculator(calculator2);
	   -->
	   
	   <bean id="calculator2" class="com.koreait.ex01.bean01.Calculator"></bean>
	   
	   <bean id="eCalculator2" class="com.koreait.ex01.bean01.EngineerCalculator">
	   		<property name="a" value="12"></property>
	   		<property name="b" value="7"></property>
	   		<property name="calculator" ref="calculator2"></property>
	   </bean>
	  
	  
	  
	  <!-- 
	  	2. 필드 값을 받아오는 생성자
	  		: constructor injection 방식
	   -->
	   <!-- 
	   		<bean id="객체명" class="클래스명">
				<constructor-arg>
					<value>1번째인수</value>
				</constructor-arg>	   			
				<constructor-arg>
					<value>2번째인수</value>
				</constructor-arg>	   			
				<constructor-arg>
					<ref bean="3번째 인수 : 객체명"/>
				</constructor-arg>	   			
	   		</bean>
	    -->
	  
	  <!-- 
	  		Calculator calculator3 = new Calculator();
	  		EngineerCalculator eCalculator3 = new EngineerCalculator(25,12,calculator3);
	   -->
	  
	  <bean class="com.koreait.ex01.bean01.Calculator" id="calculator3"></bean>
	  
	  <bean class="com.koreait.ex01.bean01.EngineerCalculator" id="eCalculator3">
	  		<constructor-arg>
	  			<value>25</value>
	  		</constructor-arg>
	  		<constructor-arg>
	  			<value>12</value>
	  		</constructor-arg>
	  		<constructor-arg>
				<ref bean="calculator3"/>
	  		</constructor-arg>
	  </bean>
	  
	  <bean class="com.koreait.ex01.bean01.Calculator" id="calculator4"></bean>
	  <bean class="com.koreait.ex01.bean01.EngineerCalculator" id="eCalculator4">
	  		<constructor-arg value="100"></constructor-arg>
	  		<constructor-arg value="25"></constructor-arg>
	  		<constructor-arg ref="calculator4"></constructor-arg>
	  </bean>
	  
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 

</beans>
